---
// CartModal.astro
---

<!-- Cart Modal -->
<div id="cart-modal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden">
  <div class="flex items-center justify-center min-h-screen p-4">
    <div class="bg-white rounded-lg shadow-xl max-w-md w-full max-h-[80vh] overflow-hidden">
      <!-- Header -->
      <div class="flex items-center justify-between p-4 border-b">
        <h3 class="text-lg font-semibold">Carrito de Compras</h3>
        <button id="close-cart" class="text-gray-500 hover:text-gray-700">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>

      <!-- Cart Items -->
      <div id="cart-items" class="p-4 max-h-96 overflow-y-auto">
        <!-- Items will be dynamically inserted here -->
      </div>

      <!-- Empty Cart Message -->
      <div id="empty-cart" class="p-8 text-center text-gray-500 hidden">
        <svg class="w-16 h-16 mx-auto mb-4 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-2.5 5M7 13l2.5 5m6-5v6a2 2 0 01-2 2H9a2 2 0 01-2-2v-6m8 0V9a2 2 0 00-2-2H9a2 2 0 00-2 2v4.01"></path>
        </svg>
        <p class="text-lg font-medium mb-2">Tu carrito está vacío</p>
        <p class="text-sm">Agrega algunos productos para comenzar</p>
      </div>

      <!-- Footer -->
      <div class="border-t p-4">
        <div class="flex items-center justify-between mb-4">
          <span class="font-semibold">Total:</span>
          <span id="cart-total" class="font-bold text-lg">¥0</span>
        </div>
        <div class="flex gap-2">
          <button id="clear-cart" class="flex-1 px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors">
            Vaciar Carrito
          </button>
          <button id="checkout-cart" class="flex-1 px-4 py-2 bg-primary text-primary-foreground rounded-lg hover:bg-primary/90 transition-colors">
            Comprar Ahora
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  // Cart modal functionality
  const cartModal = document.getElementById('cart-modal');
  const closeCart = document.getElementById('close-cart');
  const cartItems = document.getElementById('cart-items');
  const emptyCart = document.getElementById('empty-cart');
  const cartTotal = document.getElementById('cart-total');
  const clearCartBtn = document.getElementById('clear-cart');
  const checkoutCartBtn = document.getElementById('checkout-cart');

  // Figure data for display
  const figureData = {
    1: {
      name: 'Asuka Langley - Evangelion',
      price: 12800,
      image: 'https://images.unsplash.com/photo-1667585149954-5beab3e9bdc4?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3w3Nzg4Nzd8MHwxfHNlYXJjaHwxfHxhbmltZSUyMGNoYXJhY3RlciUyMGZpZ3VyZXxlbnwxfHx8fDE3NTYwODU0NzJ8MA&ixlib=rb-4.1.0&q=80&w=1080&utm_source=figma&utm_medium=referral'
    },
    2: {
      name: 'Miku Hatsune - Racing 2024',
      price: 16500,
      image: 'https://images.unsplash.com/photo-1601382270349-49c15bddf738?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3w3Nzg4Nzd8MHwxfHNlYXJjaHwxfHxjb2xsZWN0aWJsZSUyMHRveSUyMGZpZ3VyZXxlbnwxfHx8fDE3NTYwODU0NzR8MA&ixlib=rb-4.1.0&q=80&w=1080&utm_source=figma&utm_medium=referral'
    },
    3: {
      name: 'Nezuko Kamado - Demon Slayer',
      price: 14200,
      image: 'https://images.unsplash.com/photo-1615592389070-bcc97e05ad01?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3w3Nzg4Nzd8MHwxfHNlYXJjaHwxfHxhbmltZSUyMGZpZ3VyZSUyMGNvbGxlY3RpYmxlfGVufDF8fHx8MTc1NjAzODgyOXww&ixlib=rb-4.1.0&q=80&w=1080&utm_source=figma&utm_medium=referral'
    },
    4: {
      name: 'Rem - Re:Zero',
      price: 15800,
      image: 'https://images.unsplash.com/photo-1601382270349-49c15bddf738?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3w3Nzg4Nzd8MHwxfHNlYXJjaHwxfHxjb2xsZWN0aWJsZSUyMHRveSUyMGZpZ3VyZXxlbnwxfHx8fDE3NTYwODU0NzR8MA&ixlib=rb-4.1.0&q=80&w=1080&utm_source=figma&utm_medium=referral'
    },
    5: {
      name: 'Zero Two - Darling in the Franxx',
      price: 17200,
      image: 'https://images.unsplash.com/photo-1667585149954-5beab3e9bdc4?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3w3Nzg4Nzd8MHwxfHNlYXJjaHwxfHxhbmltZSUyMGNoYXJhY3RlciUyMGZpZ3VyZXxlbnwxfHx8fDE3NTYwODU0NzJ8MA&ixlib=rb-4.1.0&q=80&w=1080&utm_source=figma&utm_medium=referral'
    }
  };

  // Open cart modal
  function openCart() {
    cartModal?.classList.remove('hidden');
    updateCartDisplay();
  }

  // Close cart modal
  function closeCartModal() {
    cartModal?.classList.add('hidden');
  }

  // Update cart display
  function updateCartDisplay() {
    const store = JSON.parse(localStorage.getItem('figure-store') || '{"cart": {}, "wishlist": []}');
    const cart = store.cart;
    
    if (Object.keys(cart).length === 0) {
      emptyCart?.classList.remove('hidden');
      cartItems?.classList.add('hidden');
      cartTotal.textContent = '¥0';
      return;
    }

    emptyCart?.classList.add('hidden');
    cartItems?.classList.remove('hidden');
    
    let total = 0;
    let itemsHTML = '';

    Object.entries(cart).forEach(([figureId, quantity]) => {
      const figure = figureData[figureId];
      if (figure) {
        const itemTotal = figure.price * quantity;
        total += itemTotal;
        
        itemsHTML += `
          <div class="flex items-center gap-3 py-3 border-b last:border-b-0">
            <img src="${figure.image}" alt="${figure.name}" class="w-16 h-16 object-cover rounded-lg">
            <div class="flex-1">
              <h4 class="font-medium text-sm">${figure.name}</h4>
              <p class="text-gray-500 text-sm">¥${figure.price.toLocaleString('en-US')}</p>
            </div>
            <div class="flex items-center gap-2">
              <button onclick="updateQuantity(${figureId}, ${quantity - 1})" class="w-6 h-6 border border-gray-300 rounded flex items-center justify-center hover:bg-gray-50">
                <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4"></path>
                </svg>
              </button>
              <span class="w-8 text-center text-sm">${quantity}</span>
              <button onclick="updateQuantity(${figureId}, ${quantity + 1})" class="w-6 h-6 border border-gray-300 rounded flex items-center justify-center hover:bg-gray-50">
                <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                </svg>
              </button>
            </div>
            <button onclick="removeFromCart(${figureId})" class="text-red-500 hover:text-red-700">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
              </svg>
            </button>
          </div>
        `;
      }
    });

    if (cartItems) {
      cartItems.innerHTML = itemsHTML;
    }
    
    if (cartTotal) {
      cartTotal.textContent = `¥${total.toLocaleString('en-US')}`;
    }
  }

  // Update quantity
  function updateQuantity(figureId, newQuantity) {
    const store = JSON.parse(localStorage.getItem('figure-store') || '{"cart": {}, "wishlist": []}');
    
    if (newQuantity <= 0) {
      delete store.cart[figureId];
    } else {
      store.cart[figureId] = newQuantity;
    }
    
    localStorage.setItem('figure-store', JSON.stringify(store));
    window.dispatchEvent(new CustomEvent('cartUpdated'));
    updateCartDisplay();
  }

  // Remove from cart
  function removeFromCart(figureId) {
    const store = JSON.parse(localStorage.getItem('figure-store') || '{"cart": {}, "wishlist": []}');
    delete store.cart[figureId];
    localStorage.setItem('figure-store', JSON.stringify(store));
    window.dispatchEvent(new CustomEvent('cartUpdated'));
    updateCartDisplay();
  }

  // Clear cart
  function clearCart() {
    const store = JSON.parse(localStorage.getItem('figure-store') || '{"cart": {}, "wishlist": []}');
    store.cart = {};
    localStorage.setItem('figure-store', JSON.stringify(store));
    window.dispatchEvent(new CustomEvent('cartUpdated'));
    updateCartDisplay();
  }

  // Checkout
  function checkout() {
    // Redirect to WhatsApp with cart info
    const store = JSON.parse(localStorage.getItem('figure-store') || '{"cart": {}, "wishlist": []}');
    const cart = store.cart;
    
    if (Object.keys(cart).length === 0) {
      alert('Tu carrito está vacío');
      return;
    }

    let message = 'Hola! Quiero comprar los siguientes productos:\n\n';
    let total = 0;

    Object.entries(cart).forEach(([figureId, quantity]) => {
      const figure = figureData[figureId];
      if (figure) {
        const itemTotal = figure.price * quantity;
        total += itemTotal;
        message += `• ${figure.name} x${quantity} - ¥${itemTotal.toLocaleString('en-US')}\n`;
      }
    });

    message += `\nTotal: ¥${total.toLocaleString('en-US')}`;
    
    const encodedMessage = encodeURIComponent(message);
    window.open(`https://wa.me/51949799869?text=${encodedMessage}`, '_blank');
    
    // Clear cart after checkout
    clearCart();
    closeCartModal();
  }

  // Event listeners
  closeCart?.addEventListener('click', closeCartModal);
  clearCartBtn?.addEventListener('click', clearCart);
  checkoutCartBtn?.addEventListener('click', checkout);

  // Close modal when clicking outside
  cartModal?.addEventListener('click', (e) => {
    if (e.target === cartModal) {
      closeCartModal();
    }
  });

  // Make functions globally available
  window.openCart = openCart;
  window.updateQuantity = updateQuantity;
  window.removeFromCart = removeFromCart;
</script>
