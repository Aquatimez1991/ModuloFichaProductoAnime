---
// CartModal.astro
---

<!-- Cart Modal -->
<div id="cart-modal" class="fixed inset-0 bg-black/20 backdrop-blur-sm z-50 hidden">
  <div class="flex items-center justify-center min-h-screen p-4">
    <div class="bg-white/95 backdrop-blur-md rounded-3xl shadow-medium max-w-md w-full max-h-[80vh] overflow-hidden border border-white/20">
      <!-- Header -->
      <div class="flex items-center justify-between p-4 border-b">
        <h3 class="text-lg font-semibold">Carrito de Compras</h3>
        <button id="close-cart" class="text-muted-foreground hover:text-foreground transition-colors">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>

      <!-- Cart Items -->
      <div id="cart-items" class="p-4 max-h-96 overflow-y-auto">
        <!-- Items will be dynamically inserted here -->
      </div>

      <!-- Empty Cart Message -->
      <div id="empty-cart" class="p-8 text-center text-muted-foreground hidden">
        <svg class="w-16 h-16 mx-auto mb-4 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-2.5 5M7 13l2.5 5m6-5v6a2 2 0 01-2 2H9a2 2 0 01-2-2v-6m8 0V9a2 2 0 00-2-2H9a2 2 0 00-2 2v4.01"></path>
        </svg>
        <p class="text-lg font-medium mb-2">Tu carrito esta vacio</p>
        <p class="text-sm">Agrega algunos productos para comenzar</p>
      </div>

      <!-- Footer -->
      <div class="border-t p-4">
        <div class="flex items-center justify-between mb-4">
          <span class="font-semibold">Total:</span>
                      <span id="cart-total" class="font-bold text-lg">S/0</span>
        </div>
        <div class="flex gap-2">
          <button id="clear-cart" class="flex-1 px-4 py-2 border border-border rounded-xl text-foreground hover:bg-muted transition-colors">
            Vaciar Carrito
          </button>
          <button id="checkout-cart" class="flex-1 px-4 py-2 bg-gradient-to-r from-emerald-500 to-teal-500 text-white rounded-xl hover:from-emerald-600 hover:to-teal-600 transition-all duration-300 shadow-soft">
            Comprar Ahora
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  // Cart modal functionality
  const cartModal = document.getElementById('cart-modal');
  const closeCart = document.getElementById('close-cart');
  const cartItems = document.getElementById('cart-items');
  const emptyCart = document.getElementById('empty-cart');
  const cartTotal = document.getElementById('cart-total');
  const clearCartBtn = document.getElementById('clear-cart');
  const checkoutCartBtn = document.getElementById('checkout-cart');

  // Figure data for display - Actualizado con imagenes locales correctas
  const figureData = {
    1: {
      name: 'Yotsuba Koiwai',
      price: 500,
      image: '/yotsuba/yotsuba-1.jpg'
    },
    2: {
      name: 'GGG Series Mobile Suit Zeta Gundam Haman Karn 1/8',
      price: 500,
      image: '/gundam-haman/gundam-haman-1.jpg'
    },
    3: {
      name: 'Nendoroid Petite - B.G.M Festival Set Vol.0',
      price: 100,
      image: '/nendoroid-petite/nendoroid-petite-1.jpg'
    },
    4: {
      name: 'Granblue Fantasy - Charlotta - 1/8',
      price: 1000,
      image: '/granblue-charlotta/granblue-charlotta-1.jpg'
    },
    5: {
      name: 'Odin Sphere - Gwendolyn 1/8 Complete Figure',
      price: 500,
      image: '/odin-gwendolyn/odin-gwendolyn-1.jpg'
    },
    6: {
      name: 'Odin Sphere - Mercedes 1/8 Complete Figure',
      price: 500,
      image: '/odin-mercedes/odin-mercedes-1.jpg'
    },
    7: {
      name: 'Odin Sphere - Velvet with Cornelius 1/8 Complete Figure',
      price: 500,
      image: '/odin-velvet/odin-velvet-1.jpg'
    },
    8: {
      name: 'GGG Series Mobile Suit Gundam 0083 STARDUST MEMORY - Anavel Gato 1/8',
      price: 500,
      image: '/GGGSeriesMobileSuitGundam0083AnavelGato/GGGSeriesMobileSuitGundam0083Anavel Gato1.jpg'
    },
    9: {
      name: 'Excellent Model RAHDX G.A.NEO Mobile Suit Gundam Ramba Ral 1/8',
      price: 500,
      image: '/gundam-ramba/gundam-ramba-1.jpg'
    },
    10: {
      name: 'Yamato Guys Collection - Space Battleship Yamato 2199: Juzo Okita 1/8 Complete Figure',
      price: 500,
      image: '/yamato-okita/yamato-okita-1.jpg'
    },
    11: {
      name: '1/100 MG MS-07B-3 Gouf Custom',
      price: 200,
      image: '/gouf-custom/gouf-custom-1.jpg'
    },
    12: {
      name: '1/100 MG Qubeley',
      price: 300,
      image: '/qubeley/qubeley-1.jpg'
    },
    13: {
      name: 'THE iDOLM@STER Cinderella Girls - Anastasia - 1/8 - Memories Ver. (Alter)',
      price: 500,
      image: '/cinderella-anastasia/cinderella-anastasia-1.jpg'
    },
    14: {
      name: 'THE iDOLM@STER Cinderella Girls - Nitta Minami - 1/8 - Memories Ver. (Alter)',
      price: 500,
      image: '/cinderella-minami/cinderella-minami-1.jpg'
    },
    15: {
      name: 'THE iDOLM@STER Cinderella Girls - Kanzaki Ranko - 1/8 - Memories Ver. (Alter)',
      price: 500,
      image: '/cinderella-ranko/cinderella-ranko-1.jpg'
    },
    16: {
      name: 'GRANBLUE FANTASY - Danua 1/8 Complete Figure',
      price: 500,
      image: '/granblue-danua/granblue-danua-1.jpg'
    },
    17: {
      name: 'GUILTY GEAR Xrd -SIGN- Elphelt Valentine 1/7 Complete Figure',
      price: 500,
      image: '/guilty-elphelt/guilty-elphelt-1.jpg'
    },
    18: {
      name: 'Excellent Model Shinra Bansho Choco - Masenki Asmodies 1/8 Complete Figure',
      price: 500,
      image: '/shinra-asmodies/shinra-asmodies-1.jpg'
    },
    19: {
      name: 'Excellent Model - Shinra Bansho Choco: Mashougun Astaroth 1/8 Complete Figure',
      price: 500,
      image: '/shinra-astaroth/shinra-astaroth-1.jpg'
    },
    20: {
      name: 'THE IDOLM@STER Cinderella Girls - Sachiko Koshimizu Self-Proclaimed Cute Ver. (Regular Edition) 1/8 Complete Figure',
      price: 300,
      image: '/cinderella-sachiko/cinderella-sachiko-1.jpg'
    },
    21: {
      name: 'Nendoroid - Snow Miku Magical Snow 2014',
      price: 500,
      image: '/nendoroid-snow-miku/nendoroid-snow-miku-1.jpg'
    },
    22: {
      name: 'Golgo 13 - Duke Togo - Figma (#042) (Max Factory)',
      price: 500,
      image: '/figma-golgo/figma-golgo-1.jpg'
    },
    23: {
      name: 'Triggerheart Exelica - Exelica 1/8 Complete Figure',
      price: 800,
      image: '/triggerheart-exelica/triggerheart-exelica-1.jpg'
    },
    24: {
      name: 'Orchid Seed Seven Deadly Sins Leviathan 1/7 PVC',
      price: 500,
      image: '/orchid-leviathan/orchid-leviathan-1.jpg'
    },
    25: {
      name: 'Nendoroid - Hatsune Miku Halloween 2014',
      price: 500,
      image: '/nendoroid-halloween-miku/nendoroid-halloween-miku-1.jpg'
    },
    26: {
      name: 'Character Vocal Series 01 Hatsune Miku Tell Your World Ver. 1/8 Complete Figure',
      price: 750,
      image: '/miku-tell-world/miku-tell-world-1.jpg'
    },
    27: {
      name: 'Grimoire of Zero - Zero 1/8 Complete Figure',
      price: 800,
      image: '/grimoire-zero/grimoire-zero-1.jpg'
    },
    28: {
      name: 'THE IDOLM@STER Cinderella Girls - Riina Tada 1/8 Complete Figure',
      price: 500,
      image: '/idolmaster-riina/idolmaster-riina-1.jpg'
    },
    101: {
      name: 'Nendoroid Hatsune Miku: Sailor Uniform',
      price: 500,
      image: '/nendoroid-sailor-miku/nendoroid-sailor-miku-1.jpg'
    },
    102: {
      name: 'Nendoroid - UTAU: Teto Kasane',
      price: 500,
      image: '/nendoroid-teto/nendoroid-teto-1.jpg'
    }
  };

  // Open cart modal
  function openCart() {
    cartModal?.classList.remove('hidden');
    updateCartDisplay();
  }

  // Close cart modal
  function closeCartModal() {
    cartModal?.classList.add('hidden');
  }

  // Update cart display
  function updateCartDisplay() {
    const store = JSON.parse(localStorage.getItem('figure-store') || '{"cart": {}, "wishlist": []}');
    const cart = store.cart;
    
    if (Object.keys(cart).length === 0) {
      emptyCart?.classList.remove('hidden');
      cartItems?.classList.add('hidden');
              cartTotal.textContent = 'S/0';
      return;
    }

    emptyCart?.classList.add('hidden');
    cartItems?.classList.remove('hidden');
    
    let total = 0;
    let itemsHTML = '';

    Object.entries(cart).forEach(([figureId, quantity]) => {
      const figure = figureData[figureId];
      if (figure) {
        const itemTotal = figure.price * quantity;
        total += itemTotal;
        
        itemsHTML += `
          <div class="flex items-center gap-3 py-3 border-b last:border-b-0">
            <img src="${figure.image}" alt="${figure.name}" class="w-16 h-16 object-cover rounded-lg" onerror="this.src='/placeholder-figure.svg'; this.onerror=null;">
            <div class="flex-1">
              <h4 class="font-medium text-sm">${figure.name}</h4>
              <p class="text-gray-500 text-sm">S/${figure.price.toLocaleString('en-US')}</p>
            </div>
            <div class="flex items-center gap-2">
              <button onclick="updateQuantity(${figureId}, ${quantity - 1})" class="w-6 h-6 border border-gray-300 rounded flex items-center justify-center hover:bg-gray-50">
                <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4"></path>
                </svg>
              </button>
              <span class="w-8 text-center text-sm">${quantity}</span>
              <button onclick="updateQuantity(${figureId}, ${quantity + 1})" class="w-6 h-6 border border-gray-300 rounded flex items-center justify-center hover:bg-gray-50">
                <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                </svg>
              </button>
            </div>
            <button onclick="removeFromCart(${figureId})" class="text-red-500 hover:text-red-700">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
              </svg>
            </button>
          </div>
        `;
      }
    });

    if (cartItems) {
      cartItems.innerHTML = itemsHTML;
    }
    
    if (cartTotal) {
              cartTotal.textContent = `S/${total.toLocaleString('en-US')}`;
    }
  }

  // Update quantity
  function updateQuantity(figureId: number, newQuantity: number) {
    const store = JSON.parse(localStorage.getItem('figure-store') || '{"cart": {}, "wishlist": []}');
    
    if (newQuantity <= 0) {
      delete store.cart[figureId];
    } else {
      store.cart[figureId] = newQuantity;
    }
    
    localStorage.setItem('figure-store', JSON.stringify(store));
    window.dispatchEvent(new CustomEvent('cartUpdated'));
    updateCartDisplay();
  }

  // Remove from cart
  function removeFromCart(figureId: number) {
    const store = JSON.parse(localStorage.getItem('figure-store') || '{"cart": {}, "wishlist": []}');
    delete store.cart[figureId];
    localStorage.setItem('figure-store', JSON.stringify(store));
    window.dispatchEvent(new CustomEvent('cartUpdated'));
    updateCartDisplay();
  }

  // Clear cart
  function clearCart() {
    const store = JSON.parse(localStorage.getItem('figure-store') || '{"cart": {}, "wishlist": []}');
    store.cart = {};
    localStorage.setItem('figure-store', JSON.stringify(store));
    window.dispatchEvent(new CustomEvent('cartUpdated'));
    updateCartDisplay();
  }

  // Checkout
  function checkout() {
    // Redirect to WhatsApp with cart info
    const store = JSON.parse(localStorage.getItem('figure-store') || '{"cart": {}, "wishlist": []}');
    const cart = store.cart;
    
    if (Object.keys(cart).length === 0) {
      alert('Tu carrito esta vacio');
      return;
    }

    let message = 'Hola! Quiero comprar los siguientes productos:\n\n';
    let total = 0;

    Object.entries(cart).forEach(([figureId, quantity]) => {
      const figure = figureData[figureId];
      if (figure) {
        const itemTotal = figure.price * quantity;
        total += itemTotal;
        message += `â€¢ ${figure.name} x${quantity} - S/${itemTotal.toLocaleString('en-US')}\n`;
      }
    });

          message += `\nTotal: S/${total.toLocaleString('en-US')}`;
    
    const encodedMessage = encodeURIComponent(message);
    window.open(`https://wa.me/51949799869?text=${encodedMessage}`, '_blank');
    
    // Clear cart after checkout
    clearCart();
    closeCartModal();
  }

  // Event listeners
  closeCart?.addEventListener('click', closeCartModal);
  clearCartBtn?.addEventListener('click', clearCart);
  checkoutCartBtn?.addEventListener('click', checkout);

  // Close modal when clicking outside
  cartModal?.addEventListener('click', (e) => {
    if (e.target === cartModal) {
      closeCartModal();
    }
  });

  // Make functions globally available
  window.openCart = openCart;
  window.updateQuantity = updateQuantity;
  window.removeFromCart = removeFromCart;
</script>

